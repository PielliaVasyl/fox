# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-12 17:05
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('entities', '0002_auto_20170612_1429'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractContacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('updated',),
            },
        ),
        migrations.CreateModel(
            name='AbstractMapCoordinates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.CharField(max_length=20)),
                ('lng', models.CharField(max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='AbstractPageLink',
            fields=[
                ('abstractlink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLink')),
            ],
            bases=('entities.abstractlink',),
        ),
        migrations.CreateModel(
            name='AbstractSocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='HallLocation',
            fields=[
                ('abstractlocation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLocation')),
            ],
            bases=('entities.abstractlocation',),
        ),
        migrations.CreateModel(
            name='OrganizationLocation',
            fields=[
                ('abstractlocation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLocation')),
            ],
            bases=('entities.abstractlocation',),
        ),
        migrations.CreateModel(
            name='PageLocalClasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('dance_directions', models.ManyToManyField(to='entities.DanceDirection')),
                ('dance_styles', models.ManyToManyField(to='entities.DanceStyle')),
            ],
            options={
                'ordering': ('updated',),
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=16, validators=[django.core.validators.RegexValidator(message="Введите номер телефона в формате: '+380XXXXXXX'. Разрешено до 15 цифр.", regex='^\\+?1?\\d{9,15}$')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='PlaceLocation',
            fields=[
                ('abstractlocation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLocation')),
            ],
            bases=('entities.abstractlocation',),
        ),
        migrations.CreateModel(
            name='PlaceType',
            fields=[
                ('abstracttype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractType')),
                ('title', models.CharField(choices=[('OPEN_AIR', 'Open air')], default='OPEN_AIR', max_length=20)),
            ],
            bases=('entities.abstracttype',),
        ),
        migrations.CreateModel(
            name='SchoolLocation',
            fields=[
                ('abstractlocation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLocation')),
            ],
            bases=('entities.abstractlocation',),
        ),
        migrations.CreateModel(
            name='ShopLocation',
            fields=[
                ('abstractlocation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLocation')),
            ],
            bases=('entities.abstractlocation',),
        ),
        migrations.CreateModel(
            name='ShopType',
            fields=[
                ('abstracttype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractType')),
                ('title', models.CharField(choices=[('SHOP', 'Магазин'), ('INTERNET_SHOP', 'Интернет-магазин')], default='SHOP', max_length=20)),
            ],
            bases=('entities.abstracttype',),
        ),
        migrations.CreateModel(
            name='Socials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='HallContacts',
            fields=[
                ('abstractcontacts_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractContacts')),
            ],
            bases=('entities.abstractcontacts',),
        ),
        migrations.CreateModel(
            name='HallMapCoordinates',
            fields=[
                ('abstractmapcoordinates_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractMapCoordinates')),
            ],
            bases=('entities.abstractmapcoordinates',),
        ),
        migrations.CreateModel(
            name='OrganizationContacts',
            fields=[
                ('abstractcontacts_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractContacts')),
            ],
            bases=('entities.abstractcontacts',),
        ),
        migrations.CreateModel(
            name='OrganizationMapCoordinates',
            fields=[
                ('abstractmapcoordinates_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractMapCoordinates')),
            ],
            bases=('entities.abstractmapcoordinates',),
        ),
        migrations.CreateModel(
            name='PersonContacts',
            fields=[
                ('abstractcontacts_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractContacts')),
            ],
            bases=('entities.abstractcontacts',),
        ),
        migrations.CreateModel(
            name='PlaceMapCoordinates',
            fields=[
                ('abstractmapcoordinates_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractMapCoordinates')),
            ],
            bases=('entities.abstractmapcoordinates',),
        ),
        migrations.CreateModel(
            name='ResourceContacts',
            fields=[
                ('abstractcontacts_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractContacts')),
            ],
            bases=('entities.abstractcontacts',),
        ),
        migrations.CreateModel(
            name='SchoolContacts',
            fields=[
                ('abstractcontacts_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractContacts')),
            ],
            bases=('entities.abstractcontacts',),
        ),
        migrations.CreateModel(
            name='SchoolMapCoordinates',
            fields=[
                ('abstractmapcoordinates_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractMapCoordinates')),
            ],
            bases=('entities.abstractmapcoordinates',),
        ),
        migrations.CreateModel(
            name='ShopContacts',
            fields=[
                ('abstractcontacts_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractContacts')),
            ],
            bases=('entities.abstractcontacts',),
        ),
        migrations.CreateModel(
            name='ShopMapCoordinates',
            fields=[
                ('abstractmapcoordinates_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractMapCoordinates')),
            ],
            bases=('entities.abstractmapcoordinates',),
        ),
        migrations.CreateModel(
            name='SocialLinkFB',
            fields=[
                ('abstractsociallink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractSocialLink')),
            ],
            bases=('entities.abstractsociallink',),
        ),
        migrations.CreateModel(
            name='SocialLinkInstagram',
            fields=[
                ('abstractsociallink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractSocialLink')),
            ],
            bases=('entities.abstractsociallink',),
        ),
        migrations.CreateModel(
            name='SocialLinkTwitter',
            fields=[
                ('abstractsociallink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractSocialLink')),
            ],
            bases=('entities.abstractsociallink',),
        ),
        migrations.CreateModel(
            name='SocialLinkVK',
            fields=[
                ('abstractsociallink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractSocialLink')),
            ],
            bases=('entities.abstractsociallink',),
        ),
        migrations.CreateModel(
            name='TeacherContacts',
            fields=[
                ('abstractcontacts_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractContacts')),
            ],
            bases=('entities.abstractcontacts',),
        ),
        migrations.AddField(
            model_name='abstractsociallink',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='abstractmapcoordinates',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='abstractcontacts',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='abstractcontacts',
            name='phone_numbers',
            field=models.ManyToManyField(blank=True, to='entities.PhoneNumber'),
        ),
        migrations.AddField(
            model_name='abstractcontacts',
            name='socials',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.Socials'),
        ),
        migrations.AddField(
            model_name='socials',
            name='fb',
            field=models.ManyToManyField(blank=True, to='entities.SocialLinkFB'),
        ),
        migrations.AddField(
            model_name='socials',
            name='instagram',
            field=models.ManyToManyField(blank=True, to='entities.SocialLinkInstagram'),
        ),
        migrations.AddField(
            model_name='socials',
            name='twitter',
            field=models.ManyToManyField(blank=True, to='entities.SocialLinkTwitter'),
        ),
        migrations.AddField(
            model_name='socials',
            name='vk',
            field=models.ManyToManyField(blank=True, to='entities.SocialLinkVK'),
        ),
        migrations.AddField(
            model_name='shoplocation',
            name='coordinates',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.ShopMapCoordinates'),
        ),
        migrations.AddField(
            model_name='schoollocation',
            name='coordinates',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.SchoolMapCoordinates'),
        ),
        migrations.AddField(
            model_name='placelocation',
            name='coordinates',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.PlaceMapCoordinates'),
        ),
        migrations.AddField(
            model_name='organizationlocation',
            name='coordinates',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.OrganizationMapCoordinates'),
        ),
        migrations.AddField(
            model_name='halllocation',
            name='coordinates',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.HallMapCoordinates'),
        ),
    ]
