# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-19 17:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('entities', '0005_auto_20170615_1542'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('updated',),
            },
        ),
        migrations.CreateModel(
            name='AbstractPostGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AbstractTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='ArticleLink',
            fields=[
                ('abstractlink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLink')),
            ],
            bases=('entities.abstractlink',),
        ),
        migrations.CreateModel(
            name='AudioLink',
            fields=[
                ('abstractlink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLink')),
            ],
            bases=('entities.abstractlink',),
        ),
        migrations.CreateModel(
            name='PhotoLink',
            fields=[
                ('abstractlink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLink')),
            ],
            bases=('entities.abstractlink',),
        ),
        migrations.CreateModel(
            name='PlaylistLink',
            fields=[
                ('abstractlink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLink')),
            ],
            bases=('entities.abstractlink',),
        ),
        migrations.CreateModel(
            name='VideoLink',
            fields=[
                ('abstractlink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractLink')),
            ],
            bases=('entities.abstractlink',),
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('abstractpostgroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractPostGroup')),
            ],
            bases=('entities.abstractpostgroup',),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('abstractpost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractPost')),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('is_linked_article', models.BooleanField(default=False)),
                ('author_of_post', models.CharField(blank=True, max_length=100)),
            ],
            bases=('entities.abstractpost',),
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('abstractpost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractPost')),
            ],
            bases=('entities.abstractpost',),
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('abstractpostgroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractPostGroup')),
            ],
            bases=('entities.abstractpostgroup',),
        ),
        migrations.CreateModel(
            name='GlobalTag',
            fields=[
                ('abstracttag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractTag')),
            ],
            bases=('entities.abstracttag',),
        ),
        migrations.CreateModel(
            name='LocalTag',
            fields=[
                ('abstracttag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractTag')),
            ],
            bases=('entities.abstracttag',),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('abstractpost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractPost')),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, to='entities.Album')),
                ('link', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='entities.PhotoLink')),
            ],
            bases=('entities.abstractpost',),
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('abstractpostgroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractPostGroup')),
                ('link', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='entities.PlaylistLink')),
            ],
            bases=('entities.abstractpostgroup',),
        ),
        migrations.CreateModel(
            name='PostGroupTag',
            fields=[
                ('abstracttag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractTag')),
                ('is_all_directions', models.BooleanField(default=False)),
            ],
            bases=('entities.abstracttag',),
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('abstracttag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractTag')),
                ('is_all_directions', models.BooleanField(default=False)),
            ],
            bases=('entities.abstracttag',),
        ),
        migrations.CreateModel(
            name='Tracklist',
            fields=[
                ('abstractpostgroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractPostGroup')),
            ],
            bases=('entities.abstractpostgroup',),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('abstractpost_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.AbstractPost')),
                ('groups', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('link', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='entities.VideoLink')),
            ],
            bases=('entities.abstractpost',),
        ),
        migrations.AddField(
            model_name='abstractpostgroup',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='abstractpostgroup',
            name='contributors',
            field=models.ManyToManyField(blank=True, related_name='abstract_post_group_contributors', to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='abstractpostgroup',
            name='directions',
            field=models.ManyToManyField(blank=True, to='entities.Direction'),
        ),
        migrations.AddField(
            model_name='abstractpostgroup',
            name='owners',
            field=models.ManyToManyField(blank=True, related_name='abstract_post_group_owners', to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='abstractpost',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='abstractpost',
            name='contributors',
            field=models.ManyToManyField(blank=True, related_name='abstract_post_contributors', to='entities.UserProfile'),
        ),
        migrations.AddField(
            model_name='abstractpost',
            name='directions',
            field=models.ManyToManyField(blank=True, to='entities.Direction'),
        ),
        migrations.AddField(
            model_name='abstractpost',
            name='owners',
            field=models.ManyToManyField(blank=True, related_name='abstract_post_owners', to='entities.UserProfile'),
        ),
        migrations.CreateModel(
            name='AlbumTag',
            fields=[
                ('postgrouptag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.PostGroupTag')),
            ],
            bases=('entities.postgrouptag',),
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('posttag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.PostTag')),
            ],
            bases=('entities.posttag',),
        ),
        migrations.CreateModel(
            name='AudioTag',
            fields=[
                ('posttag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.PostTag')),
            ],
            bases=('entities.posttag',),
        ),
        migrations.CreateModel(
            name='ChapterTag',
            fields=[
                ('postgrouptag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.PostGroupTag')),
            ],
            bases=('entities.postgrouptag',),
        ),
        migrations.CreateModel(
            name='CityTag',
            fields=[
                ('globaltag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.GlobalTag')),
            ],
            bases=('entities.globaltag',),
        ),
        migrations.CreateModel(
            name='DanceTag',
            fields=[
                ('localtag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.LocalTag')),
            ],
            bases=('entities.localtag',),
        ),
        migrations.CreateModel(
            name='DirectionTag',
            fields=[
                ('globaltag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.GlobalTag')),
                ('direction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='entities.Direction')),
            ],
            bases=('entities.globaltag',),
        ),
        migrations.CreateModel(
            name='PhotoTag',
            fields=[
                ('posttag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.PostTag')),
            ],
            bases=('entities.posttag',),
        ),
        migrations.CreateModel(
            name='PlaylistTag',
            fields=[
                ('postgrouptag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.PostGroupTag')),
            ],
            bases=('entities.postgrouptag',),
        ),
        migrations.CreateModel(
            name='TracklistTag',
            fields=[
                ('postgrouptag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.PostGroupTag')),
            ],
            bases=('entities.postgrouptag',),
        ),
        migrations.CreateModel(
            name='VideoTag',
            fields=[
                ('posttag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.PostTag')),
            ],
            bases=('entities.posttag',),
        ),
        migrations.AddField(
            model_name='posttag',
            name='directions',
            field=models.ManyToManyField(blank=True, to='entities.Direction'),
        ),
        migrations.AddField(
            model_name='postgrouptag',
            name='directions',
            field=models.ManyToManyField(blank=True, to='entities.Direction'),
        ),
        migrations.AddField(
            model_name='audio',
            name='groups',
            field=models.ManyToManyField(blank=True, to='entities.Tracklist'),
        ),
        migrations.AddField(
            model_name='audio',
            name='link',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='entities.AudioLink'),
        ),
        migrations.AddField(
            model_name='article',
            name='groups',
            field=models.ManyToManyField(blank=True, to='entities.Chapter'),
        ),
        migrations.AddField(
            model_name='article',
            name='link',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='entities.ArticleLink'),
        ),
        migrations.CreateModel(
            name='DanceDirectionTag',
            fields=[
                ('dancetag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.DanceTag')),
            ],
            bases=('entities.dancetag',),
        ),
        migrations.CreateModel(
            name='DanceStyleCountTag',
            fields=[
                ('dancetag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.DanceTag')),
            ],
            bases=('entities.dancetag',),
        ),
        migrations.CreateModel(
            name='DanceStyleDistanceTag',
            fields=[
                ('dancetag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.DanceTag')),
            ],
            bases=('entities.dancetag',),
        ),
        migrations.CreateModel(
            name='DanceStyleTag',
            fields=[
                ('dancetag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entities.DanceTag')),
            ],
            bases=('entities.dancetag',),
        ),
        migrations.AddField(
            model_name='video',
            name='tags',
            field=models.ManyToManyField(blank=True, to='entities.VideoTag'),
        ),
        migrations.AddField(
            model_name='tracklist',
            name='tags',
            field=models.ManyToManyField(default=True, to='entities.TracklistTag'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='tags',
            field=models.ManyToManyField(default=True, to='entities.PlaylistTag'),
        ),
        migrations.AddField(
            model_name='photo',
            name='tags',
            field=models.ManyToManyField(blank=True, to='entities.PhotoTag'),
        ),
        migrations.AddField(
            model_name='dancetag',
            name='direction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='entities.Direction'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='tags',
            field=models.ManyToManyField(default=True, to='entities.ChapterTag'),
        ),
        migrations.AddField(
            model_name='audio',
            name='tags',
            field=models.ManyToManyField(blank=True, to='entities.AudioTag'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(blank=True, to='entities.ArticleTag'),
        ),
        migrations.AddField(
            model_name='album',
            name='tags',
            field=models.ManyToManyField(default=True, to='entities.AlbumTag'),
        ),
    ]
