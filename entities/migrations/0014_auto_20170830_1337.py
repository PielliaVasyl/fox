# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-08-30 13:37
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('entities', '0013_auto_20170829_1253'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerServicesOwns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('albums', models.ManyToManyField(blank=True, to='entities.Album')),
                ('articles', models.ManyToManyField(blank=True, to='entities.Article')),
                ('audios', models.ManyToManyField(blank=True, to='entities.Audio')),
                ('chapters', models.ManyToManyField(blank=True, to='entities.Chapter')),
                ('events', models.ManyToManyField(blank=True, to='entities.Event')),
                ('photos', models.ManyToManyField(blank=True, to='entities.Photo')),
                ('playlists', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('promo_actions', models.ManyToManyField(blank=True, to='entities.PromoAction')),
                ('tracklists', models.ManyToManyField(blank=True, to='entities.Tracklist')),
                ('videos', models.ManyToManyField(blank=True, to='entities.Video')),
            ],
            options={
                'ordering': ('updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HallOwns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('albums', models.ManyToManyField(blank=True, to='entities.Album')),
                ('articles', models.ManyToManyField(blank=True, to='entities.Article')),
                ('audios', models.ManyToManyField(blank=True, to='entities.Audio')),
                ('chapters', models.ManyToManyField(blank=True, to='entities.Chapter')),
                ('events', models.ManyToManyField(blank=True, to='entities.Event')),
                ('photos', models.ManyToManyField(blank=True, to='entities.Photo')),
                ('playlists', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('promo_actions', models.ManyToManyField(blank=True, to='entities.PromoAction')),
                ('tracklists', models.ManyToManyField(blank=True, to='entities.Tracklist')),
                ('videos', models.ManyToManyField(blank=True, to='entities.Video')),
            ],
            options={
                'ordering': ('updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationOwns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('albums', models.ManyToManyField(blank=True, to='entities.Album')),
                ('articles', models.ManyToManyField(blank=True, to='entities.Article')),
                ('audios', models.ManyToManyField(blank=True, to='entities.Audio')),
                ('chapters', models.ManyToManyField(blank=True, to='entities.Chapter')),
                ('events', models.ManyToManyField(blank=True, to='entities.Event')),
                ('photos', models.ManyToManyField(blank=True, to='entities.Photo')),
                ('playlists', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('promo_actions', models.ManyToManyField(blank=True, to='entities.PromoAction')),
                ('tracklists', models.ManyToManyField(blank=True, to='entities.Tracklist')),
                ('videos', models.ManyToManyField(blank=True, to='entities.Video')),
            ],
            options={
                'ordering': ('updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonOwns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('albums', models.ManyToManyField(blank=True, to='entities.Album')),
                ('articles', models.ManyToManyField(blank=True, to='entities.Article')),
                ('audios', models.ManyToManyField(blank=True, to='entities.Audio')),
                ('chapters', models.ManyToManyField(blank=True, to='entities.Chapter')),
                ('events', models.ManyToManyField(blank=True, to='entities.Event')),
                ('photos', models.ManyToManyField(blank=True, to='entities.Photo')),
                ('playlists', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('promo_actions', models.ManyToManyField(blank=True, to='entities.PromoAction')),
                ('tracklists', models.ManyToManyField(blank=True, to='entities.Tracklist')),
                ('videos', models.ManyToManyField(blank=True, to='entities.Video')),
            ],
            options={
                'ordering': ('updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceOwns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('albums', models.ManyToManyField(blank=True, to='entities.Album')),
                ('articles', models.ManyToManyField(blank=True, to='entities.Article')),
                ('audios', models.ManyToManyField(blank=True, to='entities.Audio')),
                ('chapters', models.ManyToManyField(blank=True, to='entities.Chapter')),
                ('events', models.ManyToManyField(blank=True, to='entities.Event')),
                ('photos', models.ManyToManyField(blank=True, to='entities.Photo')),
                ('playlists', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('promo_actions', models.ManyToManyField(blank=True, to='entities.PromoAction')),
                ('tracklists', models.ManyToManyField(blank=True, to='entities.Tracklist')),
                ('videos', models.ManyToManyField(blank=True, to='entities.Video')),
            ],
            options={
                'ordering': ('updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceOwns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('albums', models.ManyToManyField(blank=True, to='entities.Album')),
                ('articles', models.ManyToManyField(blank=True, to='entities.Article')),
                ('audios', models.ManyToManyField(blank=True, to='entities.Audio')),
                ('chapters', models.ManyToManyField(blank=True, to='entities.Chapter')),
                ('events', models.ManyToManyField(blank=True, to='entities.Event')),
                ('photos', models.ManyToManyField(blank=True, to='entities.Photo')),
                ('playlists', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('promo_actions', models.ManyToManyField(blank=True, to='entities.PromoAction')),
                ('tracklists', models.ManyToManyField(blank=True, to='entities.Tracklist')),
                ('videos', models.ManyToManyField(blank=True, to='entities.Video')),
            ],
            options={
                'ordering': ('updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolOwns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('albums', models.ManyToManyField(blank=True, to='entities.Album')),
                ('articles', models.ManyToManyField(blank=True, to='entities.Article')),
                ('audios', models.ManyToManyField(blank=True, to='entities.Audio')),
                ('chapters', models.ManyToManyField(blank=True, to='entities.Chapter')),
                ('events', models.ManyToManyField(blank=True, to='entities.Event')),
                ('photos', models.ManyToManyField(blank=True, to='entities.Photo')),
                ('playlists', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('promo_actions', models.ManyToManyField(blank=True, to='entities.PromoAction')),
                ('tracklists', models.ManyToManyField(blank=True, to='entities.Tracklist')),
                ('videos', models.ManyToManyField(blank=True, to='entities.Video')),
            ],
            options={
                'ordering': ('updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShopOwns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('albums', models.ManyToManyField(blank=True, to='entities.Album')),
                ('articles', models.ManyToManyField(blank=True, to='entities.Article')),
                ('audios', models.ManyToManyField(blank=True, to='entities.Audio')),
                ('chapters', models.ManyToManyField(blank=True, to='entities.Chapter')),
                ('events', models.ManyToManyField(blank=True, to='entities.Event')),
                ('photos', models.ManyToManyField(blank=True, to='entities.Photo')),
                ('playlists', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('promo_actions', models.ManyToManyField(blank=True, to='entities.PromoAction')),
                ('tracklists', models.ManyToManyField(blank=True, to='entities.Tracklist')),
                ('videos', models.ManyToManyField(blank=True, to='entities.Video')),
            ],
            options={
                'ordering': ('updated',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherOwns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('albums', models.ManyToManyField(blank=True, to='entities.Album')),
                ('articles', models.ManyToManyField(blank=True, to='entities.Article')),
                ('audios', models.ManyToManyField(blank=True, to='entities.Audio')),
                ('chapters', models.ManyToManyField(blank=True, to='entities.Chapter')),
                ('events', models.ManyToManyField(blank=True, to='entities.Event')),
                ('photos', models.ManyToManyField(blank=True, to='entities.Photo')),
                ('playlists', models.ManyToManyField(blank=True, to='entities.Playlist')),
                ('promo_actions', models.ManyToManyField(blank=True, to='entities.PromoAction')),
                ('tracklists', models.ManyToManyField(blank=True, to='entities.Tracklist')),
                ('videos', models.ManyToManyField(blank=True, to='entities.Video')),
            ],
            options={
                'ordering': ('updated',),
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='dancetag',
            name='direction',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='entities.Direction'),
        ),
        migrations.AddField(
            model_name='customerservices',
            name='owns',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.CustomerServicesOwns'),
        ),
        migrations.AddField(
            model_name='hall',
            name='owns',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.HallOwns'),
        ),
        migrations.AddField(
            model_name='organization',
            name='owns',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.OrganizationOwns'),
        ),
        migrations.AddField(
            model_name='person',
            name='owns',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.PersonOwns'),
        ),
        migrations.AddField(
            model_name='place',
            name='owns',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.PlaceOwns'),
        ),
        migrations.AddField(
            model_name='resource',
            name='owns',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.ResourceOwns'),
        ),
        migrations.AddField(
            model_name='school',
            name='owns',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.SchoolOwns'),
        ),
        migrations.AddField(
            model_name='shop',
            name='owns',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.ShopOwns'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='owns',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='entities.TeacherOwns'),
        ),
    ]
